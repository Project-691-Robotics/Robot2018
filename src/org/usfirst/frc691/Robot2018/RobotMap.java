// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc691.Robot2018;

import com.ctre.phoenix.motorcontrol.FeedbackDevice;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static WPI_TalonSRX drivetrainLeftTalon;
    public static WPI_TalonSRX drivetrainRightTalon;
    public static DifferentialDrive drivetrainDriver;
    public static SpeedController winchMotor1;
    public static SpeedController winchMotor2;
    public static SpeedControllerGroup winchMotorGroup;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static WPI_TalonSRX drivetrainLeftSlaveTalon;
    public static WPI_TalonSRX drivetrainRightSlaveTalon;

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        drivetrainLeftTalon = new WPI_TalonSRX(0);
        
        
        drivetrainRightTalon = new WPI_TalonSRX(1);
        
        
        drivetrainDriver = new DifferentialDrive(drivetrainLeftTalon, drivetrainRightTalon);
        LiveWindow.addActuator("Drivetrain", "Driver", drivetrainDriver);
        drivetrainDriver.setSafetyEnabled(false);
        drivetrainDriver.setExpiration(0.1);
        drivetrainDriver.setMaxOutput(0.8);

        winchMotor1 = new Spark(0);
        LiveWindow.addActuator("Winch", "Motor 1", (Spark) winchMotor1);
        winchMotor1.setInverted(false);
        winchMotor2 = new Spark(1);
        LiveWindow.addActuator("Winch", "Motor 2", (Spark) winchMotor2);
        winchMotor2.setInverted(false);
        winchMotorGroup = new SpeedControllerGroup(winchMotor1, winchMotor2  );
        LiveWindow.addActuator("Winch", "Motor Group", winchMotorGroup);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        drivetrainLeftTalon.configSelectedFeedbackSensor(FeedbackDevice.QuadEncoder, 0, 0);
        drivetrainRightTalon.configSelectedFeedbackSensor(FeedbackDevice.QuadEncoder, 0, 0);
        
        drivetrainLeftSlaveTalon = new WPI_TalonSRX(2);
        drivetrainLeftSlaveTalon.follow(drivetrainLeftTalon);
        drivetrainRightSlaveTalon = new WPI_TalonSRX(3);
        drivetrainRightSlaveTalon.follow(drivetrainRightTalon);
    }
}
